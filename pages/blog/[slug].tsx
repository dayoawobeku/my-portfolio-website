import type {GetStaticPaths, GetStaticProps, NextPage} from 'next';
import Head from 'next/head';
import fs from 'fs';
import * as path from 'path';
import matter from 'gray-matter';
import {serialize} from 'next-mdx-remote/serialize';
import SyntaxHighlighter from 'react-syntax-highlighter';
import {MDXRemote} from 'next-mdx-remote';
import {ParsedUrlQuery} from 'querystring';
import Button from '../../components/Button';

export const getStaticPaths: GetStaticPaths = async () => {
  const files = fs.readdirSync(path.join('posts'));

  const paths = files.map(filename => {
    return {
      params: {
        slug: filename.replace('.mdx', ''),
      },
    };
  });

  return {
    paths,
    fallback: false,
  };
};

interface SlugProps extends ParsedUrlQuery {
  slug: string;
}

interface FrontMatter {
  title: string;
  date: string;
}

interface Props {
  frontMatter: FrontMatter;
  mdxSource: object;
}

export const getStaticProps: GetStaticProps<
  Record<string, unknown>,
  SlugProps
> = async context => {
  const slug = context.params?.slug ?? '';
  const markdownWithMeta = fs.readFileSync(
    path.join('posts', slug + '.mdx'),
    'utf-8',
  );

  const {data: frontMatter, content} = matter(markdownWithMeta);

  const mdxSource = await serialize(content);

  return {
    props: {
      frontMatter,
      slug,
      mdxSource,
    },
  };
};

const components = {Button, SyntaxHighlighter};

const Post: NextPage<Props> = ({frontMatter: {title}, mdxSource}) => {
  return (
    <div>
      <Head>
        <title>Blog post title</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="post">
        <h1>{title}</h1>
        <MDXRemote compiledSource={''} {...mdxSource} components={components} />
      </div>
    </div>
  );
};

export default Post;
